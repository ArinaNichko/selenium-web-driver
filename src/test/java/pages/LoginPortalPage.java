package pages;

import base.BasePage;
import lombok.extern.slf4j.Slf4j;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import userDecorator.DefaultUser;
import userDecorator.User;
import userDecorator.UserWithAutoPasswordDecorator;
import userDecorator.UserWithEncodedPasswordDecorator;

@Slf4j
public class LoginPortalPage extends BasePage {
  @FindBy(css = "#text")
  private WebElement usernamePlaceholder;

  @FindBy(css = "#password")
  private WebElement passwordPlaceholder;

  @FindBy(css = "#login-button")
  private WebElement loginButton;

  public LoginPortalPage(WebDriver driver) {
    super(driver);
  }

  public void loginWithDefaultUser(String username, String password) {
    log.debug("Logging in with username: {}", username);
    User user = new DefaultUser(username, password);
    usernamePlaceholder.sendKeys(user.getUsername());
    passwordPlaceholder.sendKeys(user.getPassword());
    javascriptExecutor.executeScript(JS_CLICK_SCRIPT, loginButton);
  }

  public void loginWithAutoGeneratedPassword(String username) {
    log.debug("Logging in with username: {}", username);
    User user = new UserWithAutoPasswordDecorator(
            new DefaultUser(username));
    usernamePlaceholder.sendKeys(user.getUsername());
    passwordPlaceholder.sendKeys(user.getPassword());
    javascriptExecutor.executeScript(JS_CLICK_SCRIPT, loginButton);
  }

  public void loginInWithEncodedPassword(String username, String password) {
    log.debug("Logging in with username: {}", username);
    User user = new UserWithEncodedPasswordDecorator(
            new DefaultUser(username, password));
    usernamePlaceholder.sendKeys(user.getUsername());
    passwordPlaceholder.sendKeys(user.getPassword());
    javascriptExecutor.executeScript(JS_CLICK_SCRIPT, loginButton);
  }

  public void loginInWithAutoGeneratedEncodedPassword(String username, String password) {
    log.debug("Logging in with username: {}", username);
    User user = new UserWithEncodedPasswordDecorator(
            new UserWithAutoPasswordDecorator(
                    new DefaultUser(username, password))
    );
    usernamePlaceholder.sendKeys(user.getUsername());
    passwordPlaceholder.sendKeys(user.getPassword());
    javascriptExecutor.executeScript(JS_CLICK_SCRIPT, loginButton);
  }
}
